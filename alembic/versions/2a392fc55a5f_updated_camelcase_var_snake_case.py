"""Updated camelCase var -> snake_case

Revision ID: 2a392fc55a5f
Revises: 888c3b63a37e
Create Date: 2025-09-19 14:26:47.582923

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2a392fc55a5f'
down_revision: Union[str, Sequence[str], None] = '888c3b63a37e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('chunks', sa.Column('chunk_level', sa.Enum('PARENT', 'CHILD', name='chunklevel'), nullable=False))
    op.add_column('chunks', sa.Column('source_doc_id', sa.Integer(), nullable=False))
    op.add_column('chunks', sa.Column('parent_id', sa.String(), nullable=True))
    op.drop_constraint(op.f('chunks_sourceDocumentId_fkey'), 'chunks', type_='foreignkey')
    op.drop_constraint(op.f('chunks_parentId_fkey'), 'chunks', type_='foreignkey')
    op.create_foreign_key(None, 'chunks', 'chunks', ['parent_id'], ['id'])
    op.create_foreign_key(None, 'chunks', 'source_documents', ['source_doc_id'], ['id'])
    op.drop_column('chunks', 'parentId')
    op.drop_column('chunks', 'sourceDocumentId')
    op.drop_column('chunks', 'chunkLevel')
    op.add_column('source_documents', sa.Column('file_name', sa.String(), nullable=False))
    op.add_column('source_documents', sa.Column('page_count', sa.Integer(), nullable=False))
    op.add_column('source_documents', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('source_documents', sa.Column('processed_at', sa.DateTime(), nullable=True))
    op.drop_column('source_documents', 'processedAt')
    op.drop_column('source_documents', 'createdAt')
    op.drop_column('source_documents', 'pageCount')
    op.drop_column('source_documents', 'fileName')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('source_documents', sa.Column('fileName', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('source_documents', sa.Column('pageCount', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('source_documents', sa.Column('createdAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('source_documents', sa.Column('processedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('source_documents', 'processed_at')
    op.drop_column('source_documents', 'created_at')
    op.drop_column('source_documents', 'page_count')
    op.drop_column('source_documents', 'file_name')
    op.add_column('chunks', sa.Column('chunkLevel', postgresql.ENUM('PARENT', 'CHILD', name='chunklevel'), autoincrement=False, nullable=False))
    op.add_column('chunks', sa.Column('sourceDocumentId', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('chunks', sa.Column('parentId', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'chunks', type_='foreignkey')
    op.drop_constraint(None, 'chunks', type_='foreignkey')
    op.create_foreign_key(op.f('chunks_parentId_fkey'), 'chunks', 'chunks', ['parentId'], ['id'])
    op.create_foreign_key(op.f('chunks_sourceDocumentId_fkey'), 'chunks', 'source_documents', ['sourceDocumentId'], ['id'])
    op.drop_column('chunks', 'parent_id')
    op.drop_column('chunks', 'source_doc_id')
    op.drop_column('chunks', 'chunk_level')
    # ### end Alembic commands ###
